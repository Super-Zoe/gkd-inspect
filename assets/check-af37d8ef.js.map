{"version":3,"file":"check-af37d8ef.js","sources":["../../src/utils/gm.ts","../../src/utils/fetch.ts","../../src/utils/check.ts"],"sourcesContent":["import { delay } from './others';\nimport { headers2obj } from './others';\n\ntype GmXhrRequest = import('vite-plugin-monkey/dist/client').GmXhrRequest<\n  unknown,\n  'blob'\n>;\nconst proxyFc = <T extends (...args: any[]) => any>(getFc: () => T) => {\n  return ((...args: any[]) => getFc()(...args)) as T;\n};\n\nexport const GM_xmlhttpRequest = proxyFc(\n  () => window.__NetworkExtension__?.GM_xmlhttpRequest,\n);\n\nexport const gmOk = () => {\n  return !!window.__NetworkExtension__?.GM_xmlhttpRequest;\n};\n\n/**\n * https://github.com/github/fetch/blob/fb5b0cf42b470faf8c5448ab461d561f34380a30/fetch.js#L422\n */\nexport const parseHeaders = (rawHeaders = '') => {\n  const headers = new Headers();\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  const preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n  // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill\n  // https://github.com/github/fetch/issues/748\n  // https://github.com/zloirock/core-js/issues/751\n  preProcessedHeaders\n    .split('\\r')\n    .map(function (header) {\n      return header.startsWith(`\\n`) ? header.substring(1) : header;\n    })\n    .forEach(function (line) {\n      let parts = line.split(':');\n      let key = parts.shift()?.trim();\n      if (key) {\n        let value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n  return headers;\n};\n\n/**\n * https://github.com/github/fetch/blob/9a6d748b394a2c16b250262fcaf46afd5364b415/fetch.js#L555\n */\nconst fixUrl = (url = '') => {\n  try {\n    return url === '' && location.href ? location.href : url;\n  } catch {\n    return url;\n  }\n};\n\n/**\n * simulate window.fetch with GM_xmlhttpRequest\n *\n * because [Request](https://developer.mozilla.org/en-US/docs/Web/API/Request) will delete [Forbidden_header_name](https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name)\n *\n * so you must manually modify these headers by set the second parameter of GM_fetch\n * @example\n * GM_fetch(\n *   new Request('https://www.pixiv.net/', {\n *     headers: { referer: 'https://www.pixiv.net/' }, // it will not work !!!\n *   }),\n * );\n * GM_fetch(new Request('https://www.pixiv.net/'), {\n *   headers: { referer: 'https://www.pixiv.net/' }, // it will work\n *   headers: new Headers({ referer: 'https://www.pixiv.net/' }), // it will also work\n * });\n */\nexport const GM_fetch = async (\n  input: RequestInfo | URL,\n  init: RequestInit = {},\n  xhrDetails:\n    | Partial<GmXhrRequest>\n    | ((arg: GmXhrRequest) => GmXhrRequest) = {},\n): Promise<Response> => {\n  const request = new Request(input, init).clone();\n  if (request.signal?.aborted) {\n    throw new DOMException('Aborted', 'AbortError');\n  }\n\n  const method = request.method.toUpperCase();\n  const url = fixUrl(request.url);\n\n  // headers\n  const sendHeaders = new Headers(request.headers);\n  new Headers(init.headers).forEach((value, key) => {\n    sendHeaders.set(key, value);\n  });\n\n  let binary = false;\n  let data: URLSearchParams | FormData | Blob | string | undefined = undefined;\n\n  if (method != 'GET') {\n    if (init.body) {\n      if (\n        typeof init.body == 'string' ||\n        init.body instanceof URLSearchParams\n      ) {\n        data = init.body;\n      } else if (init.body instanceof FormData) {\n        data = init.body;\n        sendHeaders.delete(`content-type`);\n      } else {\n        binary = true;\n        data = await request.blob();\n      }\n    }\n  }\n  return new Promise<Response>((resolve, reject) => {\n    let initXhrDetails: GmXhrRequest = {\n      method,\n      url,\n      headers: headers2obj(sendHeaders),\n      data,\n      binary,\n      responseType: 'blob',\n      async onload(e) {\n        let body: BodyInit | null | undefined = undefined;\n        if (!(e.response instanceof Blob && e.response.size == 0)) {\n          // Response': Response with null body status cannot have body\n          body = e.response ?? e.responseText;\n        }\n        await delay();\n        const resp = new Response(body, {\n          status: e.status,\n          statusText: e.statusText,\n          headers: parseHeaders(e.responseHeaders),\n        });\n        Object.defineProperty(resp, 'url', { value: e.finalUrl });\n        resolve(resp);\n      },\n      async onerror() {\n        await delay();\n        reject(new TypeError('Network request onerror failed'));\n      },\n      async ontimeout() {\n        await delay();\n        reject(new TypeError('Network request ontimeout failed'));\n      },\n      async onabort() {\n        await delay();\n        reject(new DOMException('Aborted', 'AbortError'));\n      },\n      async onreadystatechange(response) {\n        if (response.readyState === 4) {\n          request.signal?.removeEventListener('abort', abortXhr);\n        }\n      },\n    };\n    if (typeof xhrDetails == 'function') {\n      initXhrDetails = xhrDetails(initXhrDetails);\n    } else {\n      initXhrDetails = { ...initXhrDetails, ...xhrDetails };\n    }\n    const handle = GM_xmlhttpRequest(initXhrDetails);\n    function abortXhr() {\n      handle.abort();\n    }\n    request.signal?.addEventListener('abort', abortXhr);\n  });\n};\n","import { GM_fetch, gmOk } from './gm';\nimport store from './store';\nimport { isAllowCorsUrl } from './url';\n\nexport const enhanceFetch = async (\n  input: RequestInfo | URL,\n  init?: RequestInit,\n  options?: { proxy?: boolean },\n) => {\n  const req = new Request(input);\n  const u = new URL(req.url);\n  if (isAllowCorsUrl(u)) return fetch(input, { ...init,mode:'cors'});\n\n  if (gmOk()) {\n    // with cookie\n    // export snapshot need\n    return GM_fetch(input, init);\n  } else if (options?.proxy) {\n    const proxyUrl = new URL(`https://proxy-workers.lisonge.workers.dev/`);\n    proxyUrl.searchParams.set(`proxyUrl`, u.href);\n    const request = new Request(input, init);\n    return fetch(proxyUrl, {\n      method: request.method,\n      headers: request.headers,\n      body: request.body,\n    });\n  } else {\n    store.networkErrorDlgVisible = true;\n    throw new Error(`gm is not supported`);\n  }\n};\n","export const toValidURL = (url: string | URL, base?: string | URL) => {\n  try {\n    return new URL(url, base);\n  } catch {}\n};\n"],"names":["proxyFc","getFc","args","GM_xmlhttpRequest","_a","gmOk","parseHeaders","rawHeaders","headers","header","line","parts","key","value","fixUrl","url","GM_fetch","input","init","xhrDetails","request","method","sendHeaders","binary","data","resolve","reject","initXhrDetails","headers2obj","e","body","delay","resp","response","abortXhr","handle","enhanceFetch","options","req","u","isAllowCorsUrl","proxyUrl","store","toValidURL","base"],"mappings":"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"}