import{w as E,e as p,x as R}from"./storage-18c961a6.js";import{bM as _}from"./index-80bf7a1e.js";const g=e=>(...r)=>e()(...r),q=g(()=>{var e;return(e=window.__NetworkExtension__)==null?void 0:e.GM_xmlhttpRequest}),U=()=>{var e;return!!((e=window.__NetworkExtension__)!=null&&e.GM_xmlhttpRequest)},k=(e="")=>{const r=new Headers;return e.replace(/\r?\n[\t ]+/g," ").split("\r").map(function(t){return t.startsWith(`
`)?t.substring(1):t}).forEach(function(t){var s;let a=t.split(":"),c=(s=a.shift())==null?void 0:s.trim();if(c){let f=a.join(":").trim();r.append(c,f)}}),r},v=(e="")=>{try{return e===""&&location.href?location.href:e}catch{return e}},H=async(e,r={},n={})=>{var y;const t=new Request(e,r).clone();if((y=t.signal)!=null&&y.aborted)throw new DOMException("Aborted","AbortError");const a=t.method.toUpperCase(),c=v(t.url),s=new Headers(t.headers);new Headers(r.headers).forEach((w,d)=>{s.set(d,w)});let f=!1,u;return a!="GET"&&r.body&&(typeof r.body=="string"||r.body instanceof URLSearchParams?u=r.body:r.body instanceof FormData?(u=r.body,s.delete("content-type")):(f=!0,u=await t.blob())),new Promise((w,d)=>{var b;let l={method:a,url:c,headers:E(s),data:u,binary:f,responseType:"blob",async onload(o){let i;o.response instanceof Blob&&o.response.size==0||(i=o.response??o.responseText),await p();const m=new Response(i,{status:o.status,statusText:o.statusText,headers:k(o.responseHeaders)});Object.defineProperty(m,"url",{value:o.finalUrl}),w(m)},async onerror(){await p(),d(new TypeError("Network request onerror failed"))},async ontimeout(){await p(),d(new TypeError("Network request ontimeout failed"))},async onabort(){await p(),d(new DOMException("Aborted","AbortError"))},async onreadystatechange(o){var i;o.readyState===4&&((i=t.signal)==null||i.removeEventListener("abort",h))}};typeof n=="function"?l=n(l):l={...l,...n};const x=q(l);function h(){x.abort()}(b=t.signal)==null||b.addEventListener("abort",h)})},T=async(e,r,n)=>{const t=new Request(e),a=new URL(t.url);if(R(a))return fetch(e,{...r,mode:"cors"});if(U())return H(e,r);if(n!=null&&n.proxy){const c=new URL("https://proxy-workers.lisonge.workers.dev/");c.searchParams.set("proxyUrl",a.href);const s=new Request(e,r);return fetch(c,{method:s.method,headers:s.headers,body:s.body})}else throw _.networkErrorDlgVisible=!0,new Error("gm is not supported")},P=(e,r)=>{try{return new URL(e,r)}catch{}};export{T as e,P as t};
//# sourceMappingURL=check-af37d8ef.js.map
